<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ec6fb5d5-1380-4f7f-9958-45eefdbed424" name="Changes" comment="Restructuring and extending unit tests">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/nl/kooi/Conditional.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/nl/kooi/Conditional.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/nl/kooi/ConditionalTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/nl/kooi/ConditionalTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 5
}]]></component>
  <component name="ProjectId" id="2TX1livDFQKAM1566r1pU4OY04C" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="nl.kooi" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.ConditionalTest">
    <configuration name="ConditionalTest$ExceptionHandlingTests.functionShouldNotBeNull" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="conditional" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.kooi.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.kooi.ConditionalTest" />
      <option name="MAIN_CLASS_NAME" value="nl.kooi.ConditionalTest$ExceptionHandlingTests" />
      <option name="METHOD_NAME" value="functionShouldNotBeNull" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConditionalTest$ExceptionHandlingTests.functionShouldNotBeNull_apply" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="conditional" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.kooi.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.kooi.ConditionalTest" />
      <option name="MAIN_CLASS_NAME" value="nl.kooi.ConditionalTest$ExceptionHandlingTests" />
      <option name="METHOD_NAME" value="functionShouldNotBeNull_apply" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConditionalTest$ExceptionHandlingTests.predicateShouldNotBeNull" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="conditional" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.kooi.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.kooi.ConditionalTest" />
      <option name="MAIN_CLASS_NAME" value="nl.kooi.ConditionalTest$ExceptionHandlingTests" />
      <option name="METHOD_NAME" value="predicateShouldNotBeNull" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConditionalTest$ExceptionHandlingTests.whenShouldNotBePlacedBeforeOrApply" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="conditional" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.kooi.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.kooi.ConditionalTest" />
      <option name="MAIN_CLASS_NAME" value="nl.kooi.ConditionalTest$ExceptionHandlingTests" />
      <option name="METHOD_NAME" value="whenShouldNotBePlacedBeforeOrApply" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConditionalTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="conditional" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.kooi.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.kooi" />
      <option name="MAIN_CLASS_NAME" value="nl.kooi.ConditionalTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.ConditionalTest" />
        <item itemvalue="JUnit.ConditionalTest$ExceptionHandlingTests.functionShouldNotBeNull_apply" />
        <item itemvalue="JUnit.ConditionalTest$ExceptionHandlingTests.functionShouldNotBeNull" />
        <item itemvalue="JUnit.ConditionalTest$ExceptionHandlingTests.predicateShouldNotBeNull" />
        <item itemvalue="JUnit.ConditionalTest$ExceptionHandlingTests.whenShouldNotBePlacedBeforeOrApply" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ec6fb5d5-1380-4f7f-9958-45eefdbed424" name="Changes" comment="" />
      <created>1691174766178</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1691174766178</updated>
      <workItem from="1691998511069" duration="29812000" />
    </task>
    <task id="LOCAL-00001" summary="Improvements: making use of LinkedHashMap to guarantee the order of evaluating the predicates, introducing an applyToOrElse for Conditionals that need to return an (already evaluated, or constant) default value">
      <option name="closed" value="true" />
      <created>1692082007036</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1692082007036</updated>
    </task>
    <task id="LOCAL-00002" summary="Introducing an applyToOrThrow method">
      <option name="closed" value="true" />
      <created>1692101192280</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1692101192280</updated>
    </task>
    <task id="LOCAL-00003" summary="Refactoring + unit tests">
      <option name="closed" value="true" />
      <created>1692192292747</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1692192292747</updated>
    </task>
    <task id="LOCAL-00004" summary="Refactoring + unit tests">
      <option name="closed" value="true" />
      <created>1692196951362</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1692196951362</updated>
    </task>
    <task id="LOCAL-00005" summary="extra unit tests + fixing issue where Conditional applies orElse/orElseGet/orElseThrow when function in apply/orApply returns null">
      <option name="closed" value="true" />
      <created>1692212228156</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1692212228156</updated>
    </task>
    <task id="LOCAL-00006" summary="Extra unit tests + moving away from LinkedHashMap to prevent undesired behaviour when adding predicates that are seen as re-insertion of an entry.">
      <option name="closed" value="true" />
      <created>1692259634230</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1692259634230</updated>
    </task>
    <task id="LOCAL-00007" summary="Restructuring and extending unit tests">
      <option name="closed" value="true" />
      <created>1692262462584</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1692262462584</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Improvements: making use of LinkedHashMap to guarantee the order of evaluating the predicates, introducing an applyToOrElse for Conditionals that need to return an (already evaluated, or constant) default value" />
    <MESSAGE value="Introducing an applyToOrThrow method" />
    <MESSAGE value="Refactoring + unit tests" />
    <MESSAGE value="extra unit tests + fixing issue where Conditional applies orElse/orElseGet/orElseThrow when function in apply/orApply returns null" />
    <MESSAGE value="Extra unit tests + moving away from LinkedHashMap to prevent undesired behaviour when adding predicates that are seen as re-insertion of an entry." />
    <MESSAGE value="Restructuring and extending unit tests" />
    <option name="LAST_COMMIT_MESSAGE" value="Restructuring and extending unit tests" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/test/java/nl/kooi/ConditionalTest.java</url>
          <line>233</line>
          <properties class="nl.kooi.ConditionalTest.ExceptionHandlingTests" method="whenShouldNotBePlacedBeforeOrApply">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>